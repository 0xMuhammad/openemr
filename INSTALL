Installation Instructions
-------------------------------------

OSI Certified Open Source Software

-------------------------------------

I...................Overview of files
II..................Unpacking
III.................Setup
IV..................Upgrading
V...................Version History

-------------------------------------

I. Overview of Directories

accounting    - Contains information and scripts to support SQL-Ledger
contrib       - Contains many user-contributed encounter forms and utilities
custom        - Contains scripts and other text files commonly customized
Documentation - Contains useful documentation
interface     - Contains User Interface scripts and configuration
library       - Contains scripts commonly included in other scripts
sql           - Contains initial database images

II. Unpacking

The OpenEMR release archive should be named as follows:

openemr-<version>.tar.gz  -or-  openemr-<version>.zip

To extract the archive, use either of the following commands from the command line:

bash# tar -pxvzf openemr-<version>-release.tar.gz
bash# unzip openemr-<version>-release.tar.gz

Be sure to use the -p flag when using tar, as certain permissions must be preserved.

OpenEMR will be extracted into a directory named openemr.

Alternatively a Debian package may be available as a file named
openemr-<version>.deb.  This may work with some other Debian-like
Linux distributions such as Ubuntu.

III. Setup

To run OpenEMR, MySQL and Apache or another PHP-capable webserver must be configured.
To download Apache, visit www.apache.org
For information on how to install MySQL, visit www.mysql.com
PHP may be downloaded from www.php.net

OpenEMR requires a number of webserver and PHP features which may not be
enabled on your system.  These include:

- PHP Index support (ensure that index.php is in your Index path in httpd.conf)
- Session variables
- PHP libcurl support (optional for operation, mandatory for billing)

Copy the OpenEMR folder into the root folder of the webserver. On Mandrake
Linux, for example, use the command:

  bash# mv openemr /var/www/html/

Make sure the webserver is running, and point a web-browser to setup.php located
within the openemr web folder.  If you installed OpenEMR in the root web
directory, the URL would read: http://localhost/openemr/setup.php.
The setup script will step you through the configuration of the OpenEMR.

The first screen will ensure that several files/directories exist and ensure
that the webserver user (often "nobody", "apache", or "www-data") has write
privileges on these files/directories.  The files include
openemr/library/sqlconf.php, openemr/gacl/gacl.ini.php and 
openemr/gacl/gacl.class.php.  In linux, these can be set by "chmod a+w
filename" command to grant global write permissions to the file, but be
sure to set them back to something more secure (such as chmod 644) before
actively using OpenEMR.  The directories include
openemr/gacl/admin/templates_c,
openemr/interface/main/calendar/modules/PostCalendar/pntemplates/compiled and
openemr/interface/main/calendar/modules/PostCalendar/pntemplates/cache.  The command
"chown apache -R directory_name" will grant global write permissions
to the directories, and we recommend making these changes permanent.
Should it display errors related to file/directory  writing priviledges you 
may click the 'Check Again' button to try again (after fixing permissions).

In step 1, you need to tell setup whether it needs to create the databases on
its own, or if they you have already created them.  MySQL root priveleges will
be required to create a database.

In step 2, you will be presented with a number of fields which specify the MySQL
server details.

The "Server Host" field is the hostname of the MySQL server.  If you use the
mysql command line client, this is the string you would type after the -h flag.
If this is on the same machine as the webserver, leave this as "localhost".

The "Server Port" field specifies the port to use when connecting to the MySQL
server over TCP/IP.  This should be left as 3306 unless you changed it in your
MySQL configuration.

The "Database Name" field is the database where OpenEMR will reside.  If you
selected to have the database created for you, this database will be created,
along with the user specified in "Login Name".  If this database exists, setup
will not be able to create it, and will return an error.  If you selected that
you have already created the database, then setup will use the information you
provide to connect to the MySQL server.  Note that setup will not accept a
password that is not at least one (1) character in length.

The "User Hostname" field accompanies the Login Name field.  It is the hostname
from which the user is permitted to connect to the database.  This will only
appear if setup is creating the database.

The "Root Pass" field will likewise only appear when setup is creating the
database.  It is the password of your existing root user, and is used to acquire
the privileges to create the new database and user.  The rest of the fields are
specific to your practice.

The "Initial User" is the username of the first user, which is what they will
use to login.  Their default password will always be "pass", without the quotes.
The "Initial User's Name" is the value to be used as their last name.  This
information may be changed in the user administration page.

The "Initial Group" is the first group that will be created.  A user may belong
to multiple groups, which again, can be altered on the user administration page.
It is suggested that no more than one group per office be used.

Step 3 is where setup will install the OpenEMR database and connect to it to
create the initial tables.  Should anything fail during step 3, you may have
to remove the existing database or tables before you can try again. If no errors
occur, you will see a "Continue" button at the bottom.

Step 4 will then write setting to the SQL configuration file and
install/configure the embedded phpGACL access controls. After completed, there
will be a "Continue" button at the bottom.

Once setup is completed, one last thing must be done before OpenEMR can be used.
The file openemr/interface/globals.php must be edited by hand to reflect the
path and address of your webserver. The values for $webserver_root and $web_root
must be set accordingly. Also, to change the appearance of OpenEMR, uncomment or
comment theme-description lines at the bottom of config.php.

Once the system has been configured properly, you may login.  Connect to the
webserver where the files are stored with your web browser.  Login to the system
using the username that you picked (default 'admin' without quotes), and the
password 'pass', without the quotes.  From there, select the "Administration"
option, and customize the system to your needs.  Add users and groups as is
needed. For information on using OpenEMR, consult the User Documentation located
in the Documentation folder.

To create custom encounter forms, see the files

  openemr/Documentation/3rd Party Form API.txt
  openemr/interface/forms/OpenEMR_form_example-rev2.tar.gz

and read the included documentation. Many forms exist in contrib/forms as well
as in interface/forms and may be used as examples.

Other configuration settings are stored under includes/config.php.
Everything should work out of the installation without touching those, but if 
you want fax, sql-ledger, and/or Freeb integration you will need to adjust some
parameters in that file.

General-purpose fax support requires customization of interface/globals.php
and custom/faxcover.txt; it also requires the following utilities:

* faxstat and sendfax from the HylaFAX client package
* mogrify from the ImageMagick package
* tiff2pdf, tiffcp and tiffsplit from the libtiff-tools package
* enscript


IV. Setting Up Access Control

Since OpenEMR version 2.9.0.3, phpGACL access controls are installed and
configured automatically during OpenEMR setup.  It can be administered
within OpenEMR in the admin->acl menu.  This is very powerful
access control software.  To learn more about phpGACL
(see http://phpgacl.sourceforge.net/), recommend reading the phpGACL manual,
the /openemr/Documentation/README.phpgacl file, and the online wiki at
www.oemr.org. Also recommend reading the comments in /openemr/library/acl.inc.

V. Upgrading

Be sure to back up your OpenEMR installation and database before upgrading!

Upgrading OpenEMR is currently done by replacing the old openemr directory with
a newer version. Before replacing the old openemr directory, copy the following
files out, and replace them into the new openemr folder afterwards:

  openemr/interface/globals.php
  openemr/library/sqlconf.php
  openemr/includes/config.php (if you have modified it)

But before replacing them, compare the old and new files in case there are
new parameters that need to be included.  If there are other files that you
have customized, then you will also need to treat those carefully.

To upgrade the database, run the sql_upgrade.php script from your web
browser (for example http://openemr.location/sql_upgrade.php).  It will
prompt you to select the old release number, and will display the SQL
commands issued as the upgrade occurs.

Next, if you are converting from SQL-Ledger to OpenEMR's internal A/R
management (normally you should), run the sl_convert.php script
(e.g. http://openemr.location/sl_convert.php).  Note this script may
run for several minutes or longer.

If phpGACL is installed (automatically installed since OpenEMR version 2.9.0.3),
then you should upgrade your Access Controls by running the acl_upgrade.php
program using your web browser (e.g. http://openemr.location/acl_upgrade.php).
